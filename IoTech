import cv2
import os
import time

FOCAL = 250
REAL_WIDTH = 40.0  # largura média de ombros (ajustável)

def estimar_distancia(pixel_width):
    if pixel_width == 0:
        return None
    return (REAL_WIDTH * FOCAL) / pixel_width

def salvar_comando(texto):
    with open("comando.txt", "w") as f:
        f.write(texto)

def iniciar_terminal():
    if os.name == 'nt':
        os.system("start cmd /k python terminal_comando.py")
    else:
        os.system("x-terminal-emulator -e 'python3 terminal_comando.py' &")

iniciar_terminal()

# === CLASSIFICADOR DE CORPO ===
body_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_fullbody.xml')

cap = cv2.VideoCapture(0)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 320)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 240)

ultimo_estado = ""

while True:
    ret, frame = cap.read()
    if not ret:
        continue

    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    corpos = body_cascade.detectMultiScale(gray, 1.1, 3)

    comando_distancia = "Nada detectado"
    comando_direcao = ""
    info_extra = ""

    if len(corpos) > 0:
        (x, y, w, h) = corpos[0]
        distancia = estimar_distancia(w)
        centro_x = x + w // 2
        largura_frame = frame.shape[1]

        # Desenhar a caixa no corpo
        cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)

        # Comandos baseados na distância
        if distancia > 120:
            comando_distancia = "Andar pra frente"
        elif distancia < 50:
            comando_distancia = "Parar / Reduzir"
        else:
            comando_distancia = "Seguir mantendo distância"

        # Comandos baseados na posição horizontal
        if centro_x < largura_frame * 0.4:
            comando_direcao = "Vire à esquerda"
        elif centro_x > largura_frame * 0.6:
            comando_direcao = "Vire à direita"
        else:
            comando_direcao = "Siga em frente"

        info_extra = f"Distância: {int(distancia)} cm"

    estado = f"Corpos detectados: {len(corpos)}\nComando: {comando_distancia}\nDireção: {comando_direcao}\n{info_extra}"

    if estado != ultimo_estado:
        salvar_comando(estado)
        ultimo_estado = estado

    cv2.imshow("Câmera - Rastreamento de Corpo", frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()