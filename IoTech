import cv2
import os
import time
from ultralytics import YOLO

# === CONFIGURAÇÕES ===
FOCAL = 250
REAL_WIDTH = 40.0  # largura média do tronco de uma pessoa

def estimar_distancia(pixel_width):
    if pixel_width == 0:
        return None
    return (REAL_WIDTH * FOCAL) / pixel_width

def salvar_comando(texto):
    with open("comando.txt", "w") as f:
        f.write(texto)

def iniciar_terminal():
    if os.name == 'nt':
        os.system("start cmd /k python terminal_comando.py")
    else:
        os.system("x-terminal-emulator -e 'python3 terminal_comando.py' &")

# Iniciar terminal
iniciar_terminal()

# === MODELO YOLOv8 ===
model = YOLO("yolov8n.pt")  # use yolov8n para leveza

cap = cv2.VideoCapture(0)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 320)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 240)

ultimo_estado = ""

while True:
    ret, frame = cap.read()
    if not ret:
        continue

    results = model(frame, verbose=False)[0]

    comando_distancia = "Nada detectado"
    comando_direcao = ""
    info_extra = ""

    pessoas = [d for d in results.boxes.data.tolist() if int(d[5]) == 0]  # classe 0 = pessoa

    if pessoas:
        x1, y1, x2, y2, conf, cls = pessoas[0]
        x1, y1, x2, y2 = map(int, (x1, y1, x2, y2))
        w = x2 - x1
        h = y2 - y1
        distancia = estimar_distancia(w)
        centro_x = x1 + w // 2
        largura_frame = frame.shape[1]

        # Caixa ao redor da pessoa
        cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)

        # Comando baseado na distância
        if distancia > 120:
            comando_distancia = "Andar pra frente"
        elif distancia < 50:
            comando_distancia = "Parar / Reduzir"
        else:
            comando_distancia = "Seguir mantendo distância"

        # Direção baseada na posição
        if centro_x < largura_frame * 0.4:
            comando_direcao = "Vire à esquerda"
        elif centro_x > largura_frame * 0.6:
            comando_direcao = "Vire à direita"
        else:
            comando_direcao = "Siga em frente"

        info_extra = f"Distância: {int(distancia)} cm"

    estado = f"Pessoas detectadas: {len(pessoas)}\nComando: {comando_distancia}\nDireção: {comando_direcao}\n{info_extra}"

    if estado != ultimo_estado:
        salvar_comando(estado)
        ultimo_estado = estado

    cv2.imshow("YOLOv8 - Rastreamento de Pessoa", frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()